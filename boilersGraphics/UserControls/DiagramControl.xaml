<UserControl
    x:Class="boilersGraphics.UserControls.DiagramControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attached="clr-namespace:boilersGraphics.AttachedProperties"
    xmlns:behavior="clr-namespace:boilersGraphics.Views.Behaviors"
    xmlns:control="clr-namespace:boilersGraphics.Controls"
    xmlns:converter="clr-namespace:boilersGraphics.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:boilersGraphics="clr-namespace:boilersGraphics"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:boilersGraphics.UserControls"
    xmlns:helper="clr-namespace:boilersGraphics.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:selector="clr-namespace:boilersGraphics.StyleSelectors"
    xmlns:view="clr-namespace:boilersGraphics.Views"
    xmlns:viewModel="clr-namespace:boilersGraphics.ViewModels"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Loaded="DesignerCanvas_Loaded"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converter:PointsToAngleConverter x:Key="PointsToAngleConverter" />
    </UserControl.Resources>
    <Border BorderBrush="LightGray" BorderThickness="1">
        <Grid>
            <ScrollViewer Name="DesignerScrollViewer"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseWheel">
                        <helper:EventToCommand Command="{Binding MouseWheelCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <helper:EventToCommand Command="{Binding PreviewMouseDownCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseUp">
                        <helper:EventToCommand Command="{Binding PreviewMouseUpCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <helper:EventToCommand Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <helper:EventToCommand Command="{Binding MouseLeaveCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseEnter">
                        <helper:EventToCommand Command="{Binding MouseEnterCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ScrollViewer.Background>
                    <VisualBrush Stretch="None"
                                 TileMode="Tile"
                                 Viewport="0,0,16,16"
                                 ViewportUnits="Absolute">
                        <VisualBrush.Visual>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="8" />
                                    <ColumnDefinition Width="8" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="8" />
                                    <RowDefinition Height="8" />
                                </Grid.RowDefinitions>
                                <Rectangle Grid.Row="0"
                                           Grid.Column="0"
                                           Fill="#EEE" />
                                <Rectangle Grid.Row="0"
                                           Grid.Column="1"
                                           Fill="#AAA" />
                                <Rectangle Grid.Row="1"
                                           Grid.Column="0"
                                           Fill="#AAA" />
                                <Rectangle Grid.Row="1"
                                           Grid.Column="1"
                                           Fill="#EEE" />
                            </Grid>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </ScrollViewer.Background>
                <ItemsControl ItemContainerStyleSelector="{x:Static selector:DesignerItemsControlItemStyleSelector.Instance}"
                              ItemsSource="{Binding Items}"
                              Background="Transparent"
                              BorderBrush="Black"
                              BorderThickness="{Binding BorderThickness}">
                    <ItemsControl.Resources>

                        <Style x:Key="designerItemStyle" TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Canvas.Top" Value="{Binding Top.Value}" />
                            <Setter Property="Canvas.Left" Value="{Binding Left.Value}" />
                            <Setter Property="Panel.ZIndex" Value="{Binding ZIndex.Value}" />
                            <Setter Property="attached:SelectionProps.EnabledForSelection" Value="{Binding EnableForSelection.Value}" />
                            <Setter Property="attached:ItemConnectProps.EnabledForConnection" Value="True" />
                            <Setter Property="Width" Value="{Binding Width.Value}" />
                            <Setter Property="Height" Value="{Binding Height.Value}" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid x:Name="selectedGrid">
                                            <Grid.Style>
                                                <Style TargetType="{x:Type Grid}">
                                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <MatrixTransform Matrix="{Binding Matrix.Value}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Grid.Style>
                                            <control:DragThumb x:Name="PART_DragThumb" Cursor="SizeAll" />
                                            <!--  PART_ResizeDecorator  -->
                                            <Control
                                            x:Name="PART_ResizeDecorator"
                                            Template="{StaticResource ResizeDecoratorTemplate}"
                                            Visibility="Collapsed" />
                                            <ContentPresenter
                                            x:Name="PART_ContentPresenter"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding Content}" />
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter TargetName="PART_ResizeDecorator" Property="Visibility" Value="Visible" />
                                                <Setter TargetName="selectedGrid" Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect
                                                        BlurRadius="30"
                                                        Opacity="1.0"
                                                        ShadowDepth="0"
                                                        Color="Black" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                <Setter TargetName="PART_ResizeDecorator" Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="connectorItemStyle" TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Width" Value="{Binding Area.Width}" />
                            <Setter Property="Height" Value="{Binding Area.Height}" />
                            <Setter Property="Canvas.Top" Value="{Binding Area.Top}" />
                            <Setter Property="Canvas.Left" Value="{Binding Area.Left}" />
                            <Setter Property="Panel.ZIndex" Value="{Binding ZIndex.Value}" />
                            <Setter Property="attached:SelectionProps.EnabledForSelection" Value="{Binding EnableForSelection.Value}" />
                            <Setter Property="ContentTemplateSelector">
                                <Setter.Value>
                                    <view:ItemsControlTemplateSelector>
                                        <DataTemplate DataType="{x:Type viewModel:StraightConnectorViewModel}">
                                            <Canvas
                                            x:Name="selectedGrid"
                                            Margin="0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch">
                                                <Canvas.Style>
                                                    <Style TargetType="{x:Type Canvas}">
                                                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <MatrixTransform Matrix="{Binding Matrix.Value}" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Canvas.Style>
                                                <Line
                                                x:Name="straightline"
                                                IsHitTestVisible="{Binding IsHitTestVisible}"
                                                Stroke="{Binding EdgeColor, Converter={StaticResource solidColorBrushConverter}}"
                                                StrokeThickness="2"
                                                X1="{Binding Points[0].X}"
                                                X2="{Binding Points[1].X}"
                                                Y1="{Binding Points[0].Y}"
                                                Y2="{Binding Points[1].Y}" />
                                                <!--<Path
                                                x:Name="arrow"
                                                Canvas.Left="{Binding EndPoint.X}"
                                                Canvas.Top="{Binding EndPoint.Y}"
                                                Width="10"
                                                Height="10"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top"
                                                Data="M0,10 L5,0 10,10 z"
                                                Fill="{Binding EdgeColor, Converter={StaticResource solidColorBrushConverter}}"
                                                IsHitTestVisible="{Binding IsHitTestVisible}"
                                                RenderTransformOrigin="0,0"
                                                Stretch="Fill"
                                                Stroke="{Binding EdgeColor, Converter={StaticResource solidColorBrushConverter}}"
                                                Visibility="{Binding Path=IsFullConnection, Converter={StaticResource BoolToVisibilityConverter}}">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <TranslateTransform X="-5" />
                                                            <RotateTransform x:Name="rot" Angle="{Binding ConnectionPoints, Converter={StaticResource PointsToAngleConverter}}" />
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>-->
                                                <!--  PART_ResizeDecorator  -->
                                                <Control
                                                x:Name="PART_ResizeDecorator"
                                                Template="{StaticResource StraightLineResizeDecoratorTemplate}"
                                                Visibility="Collapsed" />
                                            </Canvas>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter TargetName="PART_ResizeDecorator" Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </view:ItemsControlTemplateSelector>
                                </Setter.Value>
                            </Setter>
                        </Style>


                    </ItemsControl.Resources>

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <control:DesignerCanvas x:Name="designerCanvas"
                                                    Width="{Binding Width}"
                                                    Height="{Binding Height}"
                                                    AllowDrop="True"
                                                    Background="White" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <ScrollViewer.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{Binding Grouping, Mode=OneWay, Source={StaticResource resources}}">
                            <MenuItem Command="{Binding GroupCommand}" Header="{Binding Command_Group, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_Group}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding UngroupCommand}" Header="{Binding Command_Ungroup, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_Ungroup}" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="{Binding Ordering, Mode=OneWay, Source={StaticResource resources}}">
                            <MenuItem Command="{Binding BringForegroundCommand}" Header="{Binding Command_BringForeground, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_BringToFront}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding BringForwardCommand}" Header="{Binding Command_BringForward, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_BringForward}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding SendBackwardCommand}" Header="{Binding Command_SendBackward, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_SendBackward}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding SendBackgroundCommand}" Header="{Binding Command_SendBackground, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_SendToBack}" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="{Binding Alignment, Mode=OneWay, Source={StaticResource resources}}">
                            <MenuItem Command="{Binding AlignTopCommand}" Header="{Binding Command_AlignTop, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_AlignTop}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignVerticalCenterCommand}" Header="{Binding Command_AlignVerticalCenter, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_AlignCenteredVertical}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignBottomCommand}" Header="{Binding Command_AlignBottom, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_AlignBottom}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Command="{Binding AlignLeftCommand}" Header="{Binding Command_AlignLeft, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_AlignLeft}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignHorizontalCenterCommand}" Header="{Binding Command_AlignHorizontalCenter, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_AlignCenteredHorizontal}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding AlignRightCommand}" Header="{Binding Command_AlignRight, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_AlignRight}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Command="{Binding DistributeHorizontalCommand}" Header="{Binding Command_DistributeHorizontal, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_DistributeHorizontal}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding DistributeVerticalCommand}" Header="{Binding Command_DistributeVertical, Mode=OneWay, Source={StaticResource resources}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource Icon_DistributeVertical}" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                    </ContextMenu>
                </ScrollViewer.ContextMenu>

            </ScrollViewer>
            <control:ZoomBox
                x:Name="zoomBox"
                Width="180"
                Margin="0,5,25,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                ScrollViewer="{Binding ElementName=DesignerScrollViewer}" />


        </Grid>
    </Border>
</UserControl>
