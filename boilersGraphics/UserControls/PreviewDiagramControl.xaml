<UserControl
    x:Class="boilersGraphics.UserControls.PreviewDiagramControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attached="clr-namespace:boilersGraphics.AttachedProperties"
    xmlns:control="clr-namespace:boilersGraphics.Controls"
    xmlns:converter="clr-namespace:boilersGraphics.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:selector="clr-namespace:boilersGraphics.StyleSelectors"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:view="clr-namespace:boilersGraphics.Views"
    xmlns:viewModel="clr-namespace:boilersGraphics.ViewModels"
    Width="{Binding BackgroundItem.Value.Width.Value}"
    Height="{Binding BackgroundItem.Value.Height.Value}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/boilersGraphics;component/Resources/Theme.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/boilersGraphics;component/Resources/Themes/DarkTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converter:ToPointCollectionConverter x:Key="ToPointCollection" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.LayoutTransform>
        <ScaleTransform ScaleX="0.25" ScaleY="0.25" />
    </UserControl.LayoutTransform>
    <Border BorderBrush="LightGray" BorderThickness="1">
        <Border.Background>
            <VisualBrush
                Stretch="None"
                TileMode="Tile"
                Viewport="0,0,16,16"
                ViewportUnits="Absolute">
                <VisualBrush.Visual>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="8" />
                            <ColumnDefinition Width="8" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8" />
                            <RowDefinition Height="8" />
                        </Grid.RowDefinitions>
                        <Rectangle
                            Grid.Row="0"
                            Grid.Column="0"
                            Fill="#EEE" />
                        <Rectangle
                            Grid.Row="0"
                            Grid.Column="1"
                            Fill="#AAA" />
                        <Rectangle
                            Grid.Row="1"
                            Grid.Column="0"
                            Fill="#AAA" />
                        <Rectangle
                            Grid.Row="1"
                            Grid.Column="1"
                            Fill="#EEE" />
                    </Grid>
                </VisualBrush.Visual>
            </VisualBrush>
        </Border.Background>
        <Grid>
            <ItemsControl
                Background="Transparent"
                BorderBrush="Black"
                BorderThickness="{Binding CanvasBorderThickness}"
                ItemContainerStyleSelector="{x:Static selector:DesignerItemsControlItemStyleSelector.Instance}"
                ItemsSource="{Binding AllItems.Value, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.Resources>

                    <Style x:Key="designerItemStyle" TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Canvas.Top" Value="{Binding Top.Value}" />
                        <Setter Property="Canvas.Left" Value="{Binding Left.Value}" />
                        <Setter Property="Panel.ZIndex" Value="{Binding ZIndex.Value}" />
                        <Setter Property="attached:SelectionProps.EnabledForSelection"
                                Value="{Binding EnableForSelection.Value}" />
                        <Setter Property="attached:ItemConnectProps.EnabledForConnection" Value="True" />
                        <Setter Property="Width" Value="{Binding Width.Value}" />
                        <Setter Property="Height" Value="{Binding Height.Value}" />
                        <Setter Property="MaxWidth" Value="{x:Static sys:Double.PositiveInfinity}" />
                        <Setter Property="MaxHeight" Value="{x:Static sys:Double.PositiveInfinity}" />
                        <Setter Property="Visibility"
                                Value="{Binding IsVisible.Value, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="IsHitTestVisible" Value="{Binding IsHitTestVisible.Value}" />
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid x:Name="selectedGrid">
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <MatrixTransform Matrix="{Binding Matrix.Value}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Grid.Style>
                                        <control:DragThumb x:Name="PART_DragThumb" Cursor="SizeAll" />
                                        <!--  PART_ResizeDecorator  -->
                                        <Control
                                            x:Name="PART_ResizeDecorator"
                                            Template="{StaticResource ResizeDecoratorTemplate}"
                                            Visibility="Collapsed" />
                                        <ContentPresenter
                                            x:Name="PART_ContentPresenter"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding Content}" />
                                        <!--  DEBUG  -->
                                        <!--<TextBlock VerticalAlignment="Center"
                                                       HorizontalAlignment="Center">
                                                <Run Text="IsSelected.Value=" />
                                                <Run Text="{Binding IsSelected.Value}" />
                                            </TextBlock>-->
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected.Value}" Value="True">
                                            <Setter TargetName="PART_ResizeDecorator" Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSelected.Value}" Value="False">
                                            <Setter TargetName="PART_ResizeDecorator" Property="Visibility"
                                                    Value="Hidden" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="connectorItemStyle" TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Width" Value="{Binding Area.Width}" />
                        <Setter Property="Height" Value="{Binding Area.Height}" />
                        <Setter Property="Canvas.Top" Value="{Binding Area.Top}" />
                        <Setter Property="Canvas.Left" Value="{Binding Area.Left}" />
                        <Setter Property="Panel.ZIndex" Value="{Binding ZIndex.Value}" />
                        <Setter Property="Visibility"
                                Value="{Binding IsVisible.Value, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <Setter Property="attached:SelectionProps.EnabledForSelection"
                                Value="{Binding EnableForSelection.Value}" />
                        <Setter Property="IsHitTestVisible" Value="{Binding IsHitTestVisible.Value}" />
                        <Setter Property="ContentTemplateSelector">
                            <Setter.Value>
                                <view:ItemsControlTemplateSelector>
                                    <DataTemplate DataType="{x:Type viewModel:StraightConnectorViewModel}">
                                        <Canvas
                                            x:Name="selectedGrid"
                                            Margin="0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch">
                                            <Canvas.Style>
                                                <Style TargetType="{x:Type Canvas}">
                                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <MatrixTransform Matrix="{Binding Matrix.Value}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Canvas.Style>
                                            <Line
                                                x:Name="straightline"
                                                IsHitTestVisible="{Binding IsHitTestVisible.Value}"
                                                Stroke="{Binding EdgeBrush.Value}"
                                                StrokeDashArray="{Binding StrokeDashArray.Value}"
                                                StrokeEndLineCap="{Binding StrokeEndLineCap.Value}"
                                                StrokeStartLineCap="{Binding StrokeStartLineCap.Value}"
                                                StrokeThickness="{Binding EdgeThickness.Value}"
                                                X1="{Binding Points[0].X}"
                                                X2="{Binding Points[1].X}"
                                                Y1="{Binding Points[0].Y}"
                                                Y2="{Binding Points[1].Y}" />
                                            <Control x:Name="PART_ResizeDecorator"
                                                     Template="{StaticResource StraightLineResizeDecoratorTemplate}" />
                                        </Canvas>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type viewModel:BezierCurveViewModel}">
                                        <Canvas
                                            x:Name="selectedGrid"
                                            Margin="0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch">
                                            <Canvas.Style>
                                                <Style TargetType="{x:Type Canvas}">
                                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <MatrixTransform Matrix="{Binding Matrix.Value}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Canvas.Style>
                                            <Path
                                                x:Name="bezierCurve"
                                                Canvas.Left="{Binding LeftTop.Value.X}"
                                                Canvas.Top="{Binding LeftTop.Value.Y}"
                                                IsHitTestVisible="True"
                                                Stretch="Fill"
                                                Stroke="{Binding EdgeBrush.Value}"
                                                StrokeDashArray="{Binding StrokeDashArray.Value}"
                                                StrokeEndLineCap="{Binding StrokeEndLineCap.Value}"
                                                StrokeStartLineCap="{Binding StrokeStartLineCap.Value}"
                                                StrokeThickness="{Binding EdgeThickness.Value}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="{Binding Points[0]}">
                                                            <BezierSegment
                                                                Point1="{Binding ControlPoint1.Value}"
                                                                Point2="{Binding ControlPoint2.Value}"
                                                                Point3="{Binding Points[1]}" />
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                            <Path
                                                x:Name="ControlLine1"
                                                Canvas.Left="{Binding ControlLine1LeftTop.Value.X}"
                                                Canvas.Top="{Binding ControlLine1LeftTop.Value.Y}"
                                                IsHitTestVisible="True"
                                                Stretch="Fill"
                                                Stroke="SkyBlue"
                                                StrokeDashArray="2 2"
                                                StrokeThickness="2"
                                                Visibility="Hidden">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="{Binding Points[0]}">
                                                            <LineSegment Point="{Binding ControlPoint1.Value}" />
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                            <Path
                                                x:Name="ControlLine2"
                                                Canvas.Left="{Binding ControlLine2LeftTop.Value.X}"
                                                Canvas.Top="{Binding ControlLine2LeftTop.Value.Y}"
                                                IsHitTestVisible="True"
                                                Stretch="Fill"
                                                Stroke="SkyBlue"
                                                StrokeDashArray="2 2"
                                                StrokeThickness="2"
                                                Visibility="Hidden">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="{Binding ControlPoint2.Value}">
                                                            <LineSegment Point="{Binding Points[1]}" />
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                            <control:ControlPoint
                                                x:Name="ControlPoint1"
                                                Canvas.Left="{Binding ControlPoint1.Value.X}"
                                                Canvas.Top="{Binding ControlPoint1.Value.Y}"
                                                Width="5"
                                                Height="5"
                                                Background="Red"
                                                Point="{Binding ControlPoint1.Value, Mode=TwoWay}"
                                                Tag="制御点"
                                                Visibility="Hidden" />
                                            <control:ControlPoint
                                                x:Name="ControlPoint2"
                                                Canvas.Left="{Binding ControlPoint2.Value.X}"
                                                Canvas.Top="{Binding ControlPoint2.Value.Y}"
                                                Width="5"
                                                Height="5"
                                                Background="Red"
                                                Point="{Binding ControlPoint2.Value, Mode=TwoWay}"
                                                Tag="制御点"
                                                Visibility="Hidden" />
                                            <!--  PART_ResizeDecorator  -->
                                            <Control x:Name="PART_ResizeDecorator"
                                                     Template="{StaticResource BezierCurveResizeDecoratorTemplate}" />
                                        </Canvas>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected.Value}" Value="True">
                                                <Setter TargetName="ControlPoint1" Property="Visibility"
                                                        Value="Visible" />
                                                <Setter TargetName="ControlPoint2" Property="Visibility"
                                                        Value="Visible" />
                                                <Setter TargetName="ControlLine1" Property="Visibility" Value="Visible" />
                                                <Setter TargetName="ControlLine2" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type viewModel:PolyBezierViewModel}">
                                        <Canvas
                                            x:Name="selectedGrid"
                                            Margin="0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch">
                                            <Canvas.Style>
                                                <Style TargetType="{x:Type Canvas}">
                                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <MatrixTransform Matrix="{Binding Matrix.Value}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Canvas.Style>
                                            <Path
                                                x:Name="polyBezier"
                                                Canvas.Left="{Binding LeftTop.Value.X}"
                                                Canvas.Top="{Binding LeftTop.Value.Y}"
                                                IsHitTestVisible="True"
                                                Stretch="Fill"
                                                Stroke="{Binding EdgeBrush.Value}"
                                                StrokeDashArray="{Binding StrokeDashArray.Value}"
                                                StrokeEndLineCap="{Binding StrokeEndLineCap.Value}"
                                                StrokeStartLineCap="{Binding StrokeStartLineCap.Value}"
                                                StrokeThickness="{Binding EdgeThickness.Value}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="{Binding Points[0]}">
                                                            <PolyBezierSegment
                                                                Points="{Binding Points, Converter={StaticResource ToPointCollection}}" />
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                            <!--  PART_ResizeDecorator  -->
                                            <Control x:Name="PART_ResizeDecorator"
                                                     Template="{StaticResource BezierCurveResizeDecoratorTemplate}" />
                                        </Canvas>
                                    </DataTemplate>
                                </view:ItemsControlTemplateSelector>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="snapPointItemStyle" TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Canvas.Top" Value="{Binding Top.Value}" />
                        <Setter Property="Canvas.Left" Value="{Binding Left.Value}" />
                        <Setter Property="Panel.ZIndex" Value="{Binding ZIndex.Value}" />
                        <Setter Property="Visibility"
                                Value="{Binding IsVisible.Value, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </Style>


                </ItemsControl.Resources>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <control:DesignerCanvas
                            x:Name="designerCanvas"
                            Width="{Binding Width}"
                            Height="{Binding Height}"
                            MaxWidth="{x:Static sys:Double.PositiveInfinity}"
                            MaxHeight="{x:Static sys:Double.PositiveInfinity}"
                            AllowDrop="True"
                            AutomationProperties.Name="designerCanvas"
                            Background="Transparent" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Grid>
    </Border>
</UserControl>