<UserControl x:Class="boilersGraphics.Views.Setting"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:btl="clr-namespace:Btl.Controls;assembly=Btl.Controls.MyControls"
             xmlns:converter="clr-namespace:boilersGraphics.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:boilersGraphics.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:helper="clr-namespace:boilersGraphics.Helpers"
             xmlns:prism="http://prismlibrary.com/"
             d:DesignHeight="450"
             d:DesignWidth="800"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d">
    <UserControl.Resources>
        <converter:IntToStringConverter x:Key="IntToStringConverter" />
        <converter:ColorToStringConverter x:Key="ColorToStringConverter" />
        <converter:ToSolidColorBrushConverter x:Key="solidColorBrushConverter" />
        <converter:BoolToEnumConverter x:Key="BoolToEnumConverter" />
    </UserControl.Resources>
    <DockPanel>
        <StackPanel HorizontalAlignment="Right"
                    DockPanel.Dock="Bottom"
                    Orientation="Horizontal">
            <Button Width="100"
                    Height="25"
                    Margin="5"
                    Command="{Binding OkCommand.Value}"
                    Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_OK, Mode=OneWay}" />
            <Button Width="100"
                    Height="25"
                    Margin="5"
                    Command="{Binding CancelCommand}"
                    Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_Cancel, Mode=OneWay}" />
        </StackPanel>
        <StackPanel Orientation="Vertical">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Grid.Column="0" Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_CanvasWidth, Mode=OneWay}" />
                <TextBox Grid.Row="0"
                         Grid.Column="1"
                         HorizontalAlignment="Stretch"
                         HorizontalContentAlignment="Right"
                         Text="{Binding EditTarget.Value.Width.Value, Converter={StaticResource IntToStringConverter}, UpdateSourceTrigger=PropertyChanged}" />
                <Label Grid.Row="1" Grid.Column="0" Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_CanvasHeight, Mode=OneWay}" />
                <TextBox Grid.Row="1"
                         Grid.Column="1"
                         HorizontalAlignment="Stretch"
                         HorizontalContentAlignment="Right"
                         Text="{Binding EditTarget.Value.Height.Value, Converter={StaticResource IntToStringConverter}, UpdateSourceTrigger=PropertyChanged}" />
                <Label Grid.Row="2" Grid.Column="0" Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_CanvasBackground, Mode=OneWay}" />
                <Grid Grid.Row="2"
                      Grid.Column="1"
                      Grid.ColumnSpan="2">
                    <Grid.Background>
                        <VisualBrush Stretch="None"
                                     TileMode="Tile"
                                     Viewport="0,0,16,16"
                                     ViewportUnits="Absolute">
                            <VisualBrush.Visual>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="8" />
                                        <ColumnDefinition Width="8" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="8" />
                                        <RowDefinition Height="8" />
                                    </Grid.RowDefinitions>
                                    <Rectangle Grid.Row="0"
                                               Grid.Column="0"
                                               Fill="#EEE" />
                                    <Rectangle Grid.Row="0"
                                               Grid.Column="1"
                                               Fill="#AAA" />
                                    <Rectangle Grid.Row="1"
                                               Grid.Column="0"
                                               Fill="#AAA" />
                                    <Rectangle Grid.Row="1"
                                               Grid.Column="1"
                                               Fill="#EEE" />
                                </Grid>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Grid.Background>
                    <Button Command="{Binding ChangeCanvasBackgroundCommand}" Content="{Binding EditTarget.Value.CanvasBackground.Value, Converter={StaticResource ColorToStringConverter}}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{Binding EditTarget.Value.CanvasBackground.Value, Converter={StaticResource ColorToStringConverter}}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="{Binding EditTarget.Value.CanvasBackground.Value, Converter={StaticResource ColorToStringConverter}}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <CheckBox x:Name="enablePointSnap"
                          Grid.Row="3"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Margin="5"
                          IsChecked="{Binding EditTarget.Value.EnablePointSnap.Value}"
                          Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_SnapPoint, Mode=OneWay}" />
                <Label Grid.Row="4" Grid.Column="0" Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_SnapRange, Mode=OneWay}" />
                <TextBox Grid.Row="4"
                         Grid.Column="1"
                         HorizontalAlignment="Stretch"
                         HorizontalContentAlignment="Right"
                         Text="{Binding EditTarget.Value.SnapPower.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=enablePointSnap, Path=IsChecked}" Value="True">
                                    <Setter Property="IsReadOnly" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=enablePointSnap, Path=IsChecked}" Value="False">
                                    <Setter Property="IsReadOnly" Value="True" />
                                    <Setter Property="Foreground" Value="Gray" />
                                    <Setter Property="BorderBrush" Value="Gray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <CheckBox x:Name="enableAutoSave"
                          Grid.Row="6"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Margin="5"
                          IsChecked="{Binding EditTarget.Value.EnableAutoSave.Value}"
                          Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_AutoSave, Mode=OneWay}"/>
                <RadioButton Grid.Row="6"
                             Grid.Column="1"
                             Margin="5"
                             IsChecked="{Binding EditTarget.Value.AutoSaveType.Value, Converter={StaticResource BoolToEnumConverter}, Mode=TwoWay, ConverterParameter=EveryTimeCampusChanges}"
                             Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_AutoSaveEveryTimeYouChangeCamvas, Mode=OneWay}" />
                <RadioButton Grid.Row="7"
                             Grid.Column="1"
                             Margin="5"
                             IsChecked="{Binding EditTarget.Value.AutoSaveType.Value, Converter={StaticResource BoolToEnumConverter}, Mode=TwoWay, ConverterParameter=SetInterval}"
                             Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_SetInterval, Mode=OneWay}" />
                <StackPanel Grid.Row="8"
                            Grid.Column="1"
                            Orientation="Horizontal">
                    <Label Content="{Binding Source={x:Static helper:ResourceService.Current}, Path=Resources.String_Interval, Mode=OneWay}" />
                    <btl:ShortTimeSpanControl x:Name="shortTimeSpanControl1"
                                              Background="LightGray"
                                              IsEnable="{Binding EditTarget.Value.AutoSaveType.Value, Converter={StaticResource BoolToEnumConverter}, Mode=TwoWay, ConverterParameter=SetInterval}"
                                              Value="{Binding EditTarget.Value.AutoSaveInterval.Value}" />
                </StackPanel>
            </Grid>
            <StackPanel Orientation="Horizontal" />
            <StackPanel Orientation="Horizontal" />
        </StackPanel>
    </DockPanel>
</UserControl>
