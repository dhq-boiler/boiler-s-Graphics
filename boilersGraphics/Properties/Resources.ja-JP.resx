<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alignment" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="Button_Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="Button_MaximizeWindow" xml:space="preserve">
    <value>最大化</value>
  </data>
  <data name="Button_MinimizeWindow" xml:space="preserve">
    <value>最小化</value>
  </data>
  <data name="Button_Restore" xml:space="preserve">
    <value>元に戻す(縮小)</value>
  </data>
  <data name="Command_AlignBottom" xml:space="preserve">
    <value>下揃え</value>
  </data>
  <data name="Command_AlignHorizontalCenter" xml:space="preserve">
    <value>左右中央揃え</value>
  </data>
  <data name="Command_AlignLeft" xml:space="preserve">
    <value>左揃え</value>
  </data>
  <data name="Command_AlignRight" xml:space="preserve">
    <value>右揃え</value>
  </data>
  <data name="Command_AlignTop" xml:space="preserve">
    <value>上揃え</value>
  </data>
  <data name="Command_AlignVerticalCenter" xml:space="preserve">
    <value>上下中央揃え</value>
  </data>
  <data name="Command_BringForeground" xml:space="preserve">
    <value>最前面へ移動</value>
  </data>
  <data name="Command_BringForward" xml:space="preserve">
    <value>前面へ移動</value>
  </data>
  <data name="Command_DistributeHorizontal" xml:space="preserve">
    <value>左右に整列</value>
  </data>
  <data name="Command_DistributeVertical" xml:space="preserve">
    <value>上下に整列</value>
  </data>
  <data name="Command_Export" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="Command_Group" xml:space="preserve">
    <value>グループ化</value>
  </data>
  <data name="Command_Load" xml:space="preserve">
    <value>開く</value>
  </data>
  <data name="Command_Overwrite" xml:space="preserve">
    <value>上書き保存</value>
  </data>
  <data name="Command_Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Command_SendBackground" xml:space="preserve">
    <value>最背面へ移動</value>
  </data>
  <data name="Command_SendBackward" xml:space="preserve">
    <value>背面へ移動</value>
  </data>
  <data name="Command_Setting" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Command_Ungroup" xml:space="preserve">
    <value>グループ化解除</value>
  </data>
  <data name="Command_UniformHeight" xml:space="preserve">
    <value>高さを合わせる</value>
  </data>
  <data name="Command_UniformWidth" xml:space="preserve">
    <value>幅を合わせる</value>
  </data>
  <data name="Grouping" xml:space="preserve">
    <value>グループ</value>
  </data>
  <data name="MenuItem_BrushThickness" xml:space="preserve">
    <value>ブラシの太さ</value>
  </data>
  <data name="MenuItem_Canvas" xml:space="preserve">
    <value>キャンパス(_C)</value>
  </data>
  <data name="MenuItem_Clip" xml:space="preserve">
    <value>クリップを設定</value>
  </data>
  <data name="MenuItem_Copy" xml:space="preserve">
    <value>コピー(_C)</value>
  </data>
  <data name="MenuItem_Cut" xml:space="preserve">
    <value>切り取り(_T)</value>
  </data>
  <data name="MenuItem_Edit" xml:space="preserve">
    <value>編集(_E)</value>
  </data>
  <data name="MenuItem_en_US" xml:space="preserve">
    <value>英語（米国）</value>
  </data>
  <data name="MenuItem_ExitApplication" xml:space="preserve">
    <value>boiler's Graphics を終了する</value>
  </data>
  <data name="MenuItem_Export" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="MenuItem_File" xml:space="preserve">
    <value>ファイル(_F)</value>
  </data>
  <data name="MenuItem_Help" xml:space="preserve">
    <value>ヘルプ(_H)</value>
  </data>
  <data name="MenuItem_ja_JP" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="MenuItem_Language" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="MenuItem_Log" xml:space="preserve">
    <value>ログ</value>
  </data>
  <data name="MenuItem_LogLevel" xml:space="preserve">
    <value>ログレベル</value>
  </data>
  <data name="MenuItem_LogLevel_Debug" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="MenuItem_LogLevel_Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="MenuItem_LogLevel_Fatal" xml:space="preserve">
    <value>Fatal</value>
  </data>
  <data name="MenuItem_LogLevel_Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="MenuItem_LogLevel_Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="MenuItem_LogLevel_Trace" xml:space="preserve">
    <value>Trace</value>
  </data>
  <data name="MenuItem_LogLevel_Warn" xml:space="preserve">
    <value>Warn</value>
  </data>
  <data name="MenuItem_MiniMap" xml:space="preserve">
    <value>ミニマップ</value>
  </data>
  <data name="MenuItem_Open" xml:space="preserve">
    <value>開く(_O)</value>
  </data>
  <data name="MenuItem_Overwrite" xml:space="preserve">
    <value>上書き保存</value>
  </data>
  <data name="MenuItem_Paste" xml:space="preserve">
    <value>貼り付け(_P)</value>
  </data>
  <data name="MenuItem_Preference" xml:space="preserve">
    <value>設定(_P)</value>
  </data>
  <data name="MenuItem_Property" xml:space="preserve">
    <value>プロパティ</value>
  </data>
  <data name="MenuItem_Redo" xml:space="preserve">
    <value>やり直し(_R)</value>
  </data>
  <data name="MenuItem_SaveAs" xml:space="preserve">
    <value>名前を付けて保存</value>
  </data>
  <data name="MenuItem_ShowLog" xml:space="preserve">
    <value>アプリケーションログを開く(_L)</value>
  </data>
  <data name="MenuItem_SpecifyFile" xml:space="preserve">
    <value>ファイルを指定(_S)</value>
  </data>
  <data name="MenuItem_SpecifyFileAutoSaved" xml:space="preserve">
    <value>自動保存したファイルを指定(_A)</value>
  </data>
  <data name="MenuItem_Statistics" xml:space="preserve">
    <value>統計(_S)</value>
  </data>
  <data name="MenuItem_Undo" xml:space="preserve">
    <value>元に戻す(_U)</value>
  </data>
  <data name="MenuItem_Version" xml:space="preserve">
    <value>boiler's Graphics のバージョン情報(_I)</value>
  </data>
  <data name="MenuItem_View" xml:space="preserve">
    <value>表示(_V)</value>
  </data>
  <data name="MenuItem_Window" xml:space="preserve">
    <value>ウインドウ(_W)</value>
  </data>
  <data name="Name_Item" xml:space="preserve">
    <value>アイテム</value>
  </data>
  <data name="Name_Layer" xml:space="preserve">
    <value>レイヤー</value>
  </data>
  <data name="Ordering" xml:space="preserve">
    <value>順序</value>
  </data>
  <data name="PaneTitle_Combine" xml:space="preserve">
    <value>結合</value>
  </data>
  <data name="PaneTitle_Layer" xml:space="preserve">
    <value>レイヤー</value>
  </data>
  <data name="Pane_Combine_Exclude" xml:space="preserve">
    <value>Exclude</value>
  </data>
  <data name="Pane_Combine_Intersect" xml:space="preserve">
    <value>Intersect</value>
  </data>
  <data name="Pane_Combine_Union" xml:space="preserve">
    <value>Union</value>
  </data>
  <data name="Pane_Combine_Xor" xml:space="preserve">
    <value>Xor</value>
  </data>
  <data name="Pane_Layer_CreateLayer" xml:space="preserve">
    <value>レイヤーを新規作成する</value>
  </data>
  <data name="Pane_Layer_RemoveLayer" xml:space="preserve">
    <value>レイヤーを削除する</value>
  </data>
  <data name="String_A" xml:space="preserve">
    <value>アルファ</value>
  </data>
  <data name="String_AutoSave" xml:space="preserve">
    <value>自動保存</value>
  </data>
  <data name="String_AutoSaveEveryTimeYouChangeCamvas" xml:space="preserve">
    <value>キャンパス変更毎に自動保存する</value>
  </data>
  <data name="String_B" xml:space="preserve">
    <value>青(Blue)</value>
  </data>
  <data name="String_Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="String_CanvasBackground" xml:space="preserve">
    <value>キャンバスの背景色</value>
  </data>
  <data name="String_CanvasHeight" xml:space="preserve">
    <value>キャンパスの高さ</value>
  </data>
  <data name="String_CanvasWidth" xml:space="preserve">
    <value>キャンパスの幅</value>
  </data>
  <data name="String_Export" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="String_FileName" xml:space="preserve">
    <value>ファイル名</value>
  </data>
  <data name="String_G" xml:space="preserve">
    <value>緑(Green)</value>
  </data>
  <data name="String_Hue" xml:space="preserve">
    <value>色相(Hue)</value>
  </data>
  <data name="String_Interval" xml:space="preserve">
    <value>インターバル：</value>
  </data>
  <data name="String_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="String_QualityLevel" xml:space="preserve">
    <value>クオリティレベル</value>
  </data>
  <data name="String_R" xml:space="preserve">
    <value>赤(Red)</value>
  </data>
  <data name="String_Reference" xml:space="preserve">
    <value>参照</value>
  </data>
  <data name="String_SetInterval" xml:space="preserve">
    <value>インターバルを設定する</value>
  </data>
  <data name="String_SnapPoint" xml:space="preserve">
    <value>ポイントにスナップする</value>
  </data>
  <data name="String_SnapRange" xml:space="preserve">
    <value>ポイントにスナップする範囲</value>
  </data>
  <data name="Title_ColorPicker" xml:space="preserve">
    <value>カラーピッカー</value>
  </data>
  <data name="Title_Export" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="Title_Preferences" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Tool_BezierCurve" xml:space="preserve">
    <value>ベジエ曲線ツール</value>
  </data>
  <data name="Tool_Brush" xml:space="preserve">
    <value>ブラシツール</value>
  </data>
  <data name="Tool_Ellipse" xml:space="preserve">
    <value>円ツール</value>
  </data>
  <data name="Tool_Eraser" xml:space="preserve">
    <value>消しゴムツール</value>
  </data>
  <data name="Tool_Lasso" xml:space="preserve">
    <value>なげなわツール</value>
  </data>
  <data name="Tool_Lettering" xml:space="preserve">
    <value>文字ツール</value>
  </data>
  <data name="Tool_Picture" xml:space="preserve">
    <value>画像ツール</value>
  </data>
  <data name="Tool_Pointer" xml:space="preserve">
    <value>ポインターツール</value>
  </data>
  <data name="Tool_Polygon" xml:space="preserve">
    <value>多角形ツール</value>
  </data>
  <data name="Tool_Rectangle" xml:space="preserve">
    <value>四角形ツール</value>
  </data>
  <data name="Tool_Slice" xml:space="preserve">
    <value>スライスツール</value>
  </data>
  <data name="Tool_SnapPoint" xml:space="preserve">
    <value>スナップポイントツール</value>
  </data>
  <data name="Tool_StraightLine" xml:space="preserve">
    <value>直線ツール</value>
  </data>
  <data name="Tool_VerticalLettering" xml:space="preserve">
    <value>縦書きツール</value>
  </data>
</root>