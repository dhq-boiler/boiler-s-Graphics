<UserControl
    x:Class="grapher.UserControls.DiagramControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attached="clr-namespace:grapher.AttachedProperties"
    xmlns:control="clr-namespace:grapher.Controls"
    xmlns:converter="clr-namespace:grapher.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:grapher="clr-namespace:grapher"
    xmlns:local="clr-namespace:grapher.UserControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:selector="clr-namespace:grapher.StyleSelectors"
    xmlns:view="clr-namespace:grapher.Views"
    xmlns:viewModel="clr-namespace:grapher.ViewModels"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converter:PointsToAngleConverter x:Key="PointsToAngleConverter" />
    </UserControl.Resources>
    <Border BorderBrush="LightGray" BorderThickness="1">
        <Grid>
            <ScrollViewer
                Name="DesignerScrollViewer"
                Background="Transparent"
                HorizontalScrollBarVisibility="Auto"
                VerticalScrollBarVisibility="Auto">

                <ItemsControl ItemContainerStyleSelector="{x:Static selector:DesignerItemsControlItemStyleSelector.Instance}" ItemsSource="{Binding Items}">
                    <ItemsControl.Resources>

                        <Style x:Key="designerItemStyle" TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Canvas.Top" Value="{Binding Top}" />
                            <Setter Property="Canvas.Left" Value="{Binding Left}" />
                            <Setter Property="attached:SelectionProps.EnabledForSelection" Value="True" />
                            <Setter Property="attached:ItemConnectProps.EnabledForConnection" Value="True" />
                            <Setter Property="Width" Value="{x:Static viewModel:DesignerItemViewModelBase.ItemWidth}" />
                            <Setter Property="Height" Value="{x:Static viewModel:DesignerItemViewModelBase.ItemHeight}" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid x:Name="selectedGrid">
                                            <control:DragThumb x:Name="PART_DragThumb" Cursor="SizeAll" />
                                            <ContentPresenter
                                                x:Name="PART_ContentPresenter"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                Content="{TemplateBinding Content}" />
                                            <Grid x:Name="PART_ConnectorDecorator" Margin="-5">
                                                <control:Connector
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    DataContext="{Binding LeftConnector}"
                                                    Orientation="Left"
                                                    Visibility="{Binding Path=ShowConnectors, Converter={StaticResource BoolToVisibilityConverter}}" />
                                                <control:Connector
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Top"
                                                    DataContext="{Binding TopConnector}"
                                                    Orientation="Top"
                                                    Visibility="{Binding Path=ShowConnectors, Converter={StaticResource BoolToVisibilityConverter}}" />
                                                <control:Connector
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    DataContext="{Binding RightConnector}"
                                                    Orientation="Right"
                                                    Visibility="{Binding Path=ShowConnectors, Converter={StaticResource BoolToVisibilityConverter}}" />
                                                <control:Connector
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Bottom"
                                                    DataContext="{Binding BottomConnector}"
                                                    Orientation="Bottom"
                                                    Visibility="{Binding Path=ShowConnectors, Converter={StaticResource BoolToVisibilityConverter}}" />
                                            </Grid>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Visible" />
                                            </Trigger>

                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsDragConnectionOver}" Value="True">
                                                <Setter TargetName="PART_ConnectorDecorator" Property="Visibility" Value="Visible" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter TargetName="selectedGrid" Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect
                                                            BlurRadius="30"
                                                            Opacity="1.0"
                                                            ShadowDepth="0"
                                                            Color="Black" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="connectorItemStyle" TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Width" Value="{Binding Area.Width}" />
                            <Setter Property="Height" Value="{Binding Area.Height}" />
                            <Setter Property="Canvas.Top" Value="{Binding Area.Top}" />
                            <Setter Property="Canvas.Left" Value="{Binding Area.Left}" />
                            <Setter Property="attached:SelectionProps.EnabledForSelection" Value="True" />
                            <Setter Property="ContentTemplateSelector">
                                <Setter.Value>
                                    <view:ItemsControlTemplateSelector>
                                        <DataTemplate DataType="{x:Type viewModel:StraightConnectorViewModel}">
                                            <Canvas
                                                x:Name="selectedGrid"
                                                Margin="0"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch">
                                                <Line
                                                    x:Name="straightline"
                                                    Stroke="Gray"
                                                    StrokeThickness="2"
                                                    X1="{Binding ConnectionPoints[0].X}"
                                                    X2="{Binding ConnectionPoints[1].X}"
                                                    Y1="{Binding ConnectionPoints[0].Y}"
                                                    Y2="{Binding ConnectionPoints[1].Y}" />
                                                <Path
                                                    x:Name="arrow"
                                                    Canvas.Left="{Binding EndPoint.X}"
                                                    Canvas.Top="{Binding EndPoint.Y}"
                                                    Width="10"
                                                    Height="10"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Data="M0,10 L5,0 10,10 z"
                                                    Fill="Gray"
                                                    RenderTransformOrigin="0,0"
                                                    Stretch="Fill"
                                                    Stroke="Gray"
                                                    Visibility="{Binding Path=IsFullConnection, Converter={StaticResource BoolToVisibilityConverter}}">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <TranslateTransform X="-5" />
                                                            <RotateTransform x:Name="rot" Angle="{Binding ConnectionPoints, Converter={StaticResource PointsToAngleConverter}}" />
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Canvas>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter TargetName="straightline" Property="Stroke" Value="Black" />
                                                    <Setter TargetName="arrow" Property="Stroke" Value="Black" />
                                                    <Setter TargetName="arrow" Property="Fill" Value="Black" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type viewModel:PolygonalConnectorViewModel}">
                                            <Canvas
                                                x:Name="selectedGrid"
                                                Margin="0"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch">
                                                <Polyline
                                                    x:Name="poly"
                                                    Points="{Binding Path=ConnectionPoints, Converter={x:Static converter:ConnectionPathConverter.Instance}}"
                                                    Stroke="Gray"
                                                    StrokeThickness="2" />


                                                <Path
                                                    x:Name="arrow"
                                                    Canvas.Left="{Binding EndPoint.X}"
                                                    Canvas.Top="{Binding EndPoint.Y}"
                                                    Width="10"
                                                    Height="10"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Data="M0,10 L5,0 10,10 z"
                                                    Fill="Gray"
                                                    RenderTransformOrigin="0.5,0.5"
                                                    Stretch="Fill"
                                                    Stroke="Gray"
                                                    Visibility="{Binding Path=IsFullConnection, Converter={StaticResource BoolToVisibilityConverter}}">
                                                    <Path.RenderTransform>
                                                        <RotateTransform x:Name="rot" />
                                                    </Path.RenderTransform>
                                                </Path>
                                            </Canvas>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter TargetName="poly" Property="Stroke" Value="Black" />
                                                    <Setter TargetName="arrow" Property="Stroke" Value="Black" />
                                                    <Setter TargetName="arrow" Property="Fill" Value="Black" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=SinkConnectorInfo.Orientation}" Value="Left">
                                                    <Setter TargetName="arrow" Property="Margin" Value="-15,-5,0,0" />
                                                    <Setter TargetName="arrow" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="90" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=SinkConnectorInfo.Orientation}" Value="Top">
                                                    <Setter TargetName="arrow" Property="Margin" Value="-5,-15,0,0" />
                                                    <Setter TargetName="arrow" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="180" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=SinkConnectorInfo.Orientation}" Value="Right">
                                                    <Setter TargetName="arrow" Property="Margin" Value="5,-5,0,0" />
                                                    <Setter TargetName="arrow" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="-90" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=SinkConnectorInfo.Orientation}" Value="Bottom">
                                                    <Setter TargetName="arrow" Property="Margin" Value="-5,10,0,0" />
                                                    <Setter TargetName="arrow" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="0" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>

                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </view:ItemsControlTemplateSelector>
                                </Setter.Value>
                            </Setter>
                        </Style>


                    </ItemsControl.Resources>

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <control:DesignerCanvas
                                MinWidth="1000"
                                MinHeight="800"
                                AllowDrop="True"
                                Background="White"
                                Loaded="DesignerCanvas_Loaded" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                </ItemsControl>


            </ScrollViewer>
            <control:ZoomBox
                x:Name="zoomBox"
                Width="180"
                Margin="0,5,25,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                ScrollViewer="{Binding ElementName=DesignerScrollViewer}" />


        </Grid>
    </Border>
</UserControl>
